*** Section 9: Flexbox ***
*** 54 Flex ***

- Old school html-tables, only use for true tables (not for styling!).
    <table>
        <tr class="row">
            <td class="col1"> </td>
            <td class="col2"> </td>
            <td class="col3"> </td>
        </tr>
    </table>
    > Thereafter, people started to use display + positioning (a hammer)
    > Then, float + hacks to create complex layouts. Today, only for images and text.
    > Today, Flexbox (or grid, or bootstrap)

- Wrap all in a container, and set display to flex.

- Please note that display: flex; is a different system than 
the traditional block, inline, block-inline.

- When wrapped with a flexbox container, all default display values will be ignored
    > e.g. the <p> has a default display: block;

-       display: flex (defaults to 100% width, acts like a block)
    >   display: inline-flex

*** 55 Flex direction ***
flex-direction: row;
flex-direction: column;

Note that there is a: 
    > main axis, and a 
    > cross axis;

flex-basis: 100px -> Expand the cards over the main axis 
    > (thus the effect is different for row/column direction)

cool tric:
    .flex-container > * {
      flex-basis: 100px;
    }

cool shortcut:
    CTRL + K + U = outcomment toggle

*** 56 Flex Layout ***
> Remember to apply the flex property to the right PARENT or CHILD.

order: 0;
order: 1; 
    > CHILD to change the order of the items in the container.

flex-wrap: nowrap; -> just continues on the same line (even out of sight if no space)
flex-wrap: wrap; -> continues elements on the next line (remaining the full min-width of the elements)
    > PARENT to change behaviour when you run out of width.

justify-content (along the MAIN axis): 
    > PARENT distribution of the content across the main-axis.
    > flex-start, flex-end, center (without space between!), space-between, space-around, space-evenly

align-items (along the CROSS axis):
    > PARENT
    > Only works with flex-warp: NO-WRAP
    > Only works within the container (so make sure the container has a heigth!)

align-content (along the CROSS axis):
    > PARENT
    > Only works with flex-wrap: WRAP
    > Only works within the container (so make sure the container has a heigth!)

align-self:
    > CHILD takes one child out of the normal align, and do its own thing.

> viewport height 
    > 100vh (the heigth of the screen)
    > 70vh (takes 70% of the screen)

*** 57 Flex Layout ***
Play flexbox froggy a few times!
https://appbrewery.github.io/flexboxfroggy/