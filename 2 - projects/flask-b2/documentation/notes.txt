0. add the database to the __init__.py
    > from flask_sqlalchemy import SQLAlchemy
    > db = SQLAlchemy()
    > DB_NAME = 'database.db'
    > app.config['SQLALCHEMY_DATABASE_URI'] = f'sqlte:///{DB_NAME}'
    > db.init_app(app)
        > please note that we need to import the models (of the next step) before running the init!

1. Create models (for users, and notes)
    > Notes will be more plain than users, because for Flask to use their login_module, we want user to inherit from a flask UserMixin object.
        > See later the current_user object!

    > Imports
        > from package import db (the thing you created in the __init__.py)
        > from flask_login import UserMixin
        > (for the date from sqlalchemy.sql import func -> func.now())

    > Vervolgens maak je in principe classes that inherit from db.Model
        > class Notes(db.Model):
            id = db.Column(db.Integer, primary_key=True)
            ...
            ...

    > Voor de relaties:
        > user_id = db.Column(db.Integer, db.Foreignkey('user.id'))
        > notes = db.relationship('Note')

2.  Create the tables in the __init__.py from the models you created
    from webpack.models import User, Note

    with app.app_context():
        if not path.exists('webpack/' + DB_NAME): <WERKT NOG NIET GOED!>
            db.create_all()
            print('Created Database!')

3. In the auth.py make a User object with the catched variables from the form-post, and save it to the database.
    > new_user = webpack.models.User(var=var)
    > db.session.add(new_user)
    > db.session.commit()

    > Install plugin: SQLite Viewer (Florian Klampfer)


3B. Want to go hardcore via plain SQL:
    > See for a raw SQL example: https://stackoverflow.com/questions/62568478/how-to-set-sqlalchemy-database-uri
    > https://stackoverflow.com/questions/64785905/why-is-check-password-hash-function-returning-false-using-flask-sqlite3-and-we


4. Build the login, that checks the incomming data against the database, and logs the user in with the flask_login module
    > from flask_login import login_user, login_required, logout_user, current_user
    > user = User.query.filter_by(email=login_email).first()
    > login_user(user, remember=True)
    > Zie de remember=True, blijft je onthouden tot je uitlogt.

4b. For the login module to work, you need a #Login Manager in the __init__.py, and telling the 

5. Make pages login required with the 
@login_required